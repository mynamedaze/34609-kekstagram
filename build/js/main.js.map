{"version":3,"sources":["webpack:///webpack/bootstrap b916595eeb8c7d5cb589","webpack:///./src/main.js","webpack:///./src/resizer.js","webpack:///./src/upload.js","webpack:///./~/browser-cookies/src/browser-cookies.js","webpack:///./src/pictures.js","webpack:///./src/load.js","webpack:///./src/review.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;;;;;;;ACJA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB,iCAAiC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,iCAAiC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,gBAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;ACjWD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;AACA,aAAY;AACZ;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;AACA,aAAY;AACZ;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,kDAAiD;AACjD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yDAAwD,kBAAkB;AAC1E;AACA,IAAG;AACH;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAqB,uBAAuB;AAC5C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;;;;;;ACrTD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAuC;AACvC,0CAAyC;AACzC,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB,wBAAwB;AACxC;;AAEA;AACA,yCAAwC;;AAExC;AACA,iBAAgB,oBAAoB;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;;;;;;ACbD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACVA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"js/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b916595eeb8c7d5cb589\n **/","'use strict';\n\nrequire('./resizer');\nrequire('./upload');\nrequire('./pictures');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\r\n\r\n(function() {\r\n  /**\r\n   * @constructor\r\n   * @param {string} image\r\n   */\r\n  var Resizer = function(image) {\r\n    // Изображение, с которым будет вестись работа.\r\n    this._image = new Image();\r\n    this._image.src = image;\r\n\r\n    // Холст.\r\n    this._container = document.createElement('canvas');\r\n    this._ctx = this._container.getContext('2d');\r\n\r\n    // Создаем холст только после загрузки изображения.\r\n    this._image.onload = function() {\r\n      // Размер холста равен размеру загруженного изображения. Это нужно\r\n      // для удобства работы с координатами.\r\n      this._container.width = this._image.naturalWidth;\r\n      this._container.height = this._image.naturalHeight;\r\n\r\n      /**\r\n       * Предлагаемый размер кадра в виде коэффициента относительно меньшей\r\n       * стороны изображения.\r\n       * @const\r\n       * @type {number}\r\n       */\r\n      var INITIAL_SIDE_RATIO = 0.75;\r\n\r\n      // Размер меньшей стороны изображения.\r\n      var side = Math.min(\r\n          this._container.width * INITIAL_SIDE_RATIO,\r\n          this._container.height * INITIAL_SIDE_RATIO);\r\n\r\n      // Изначально предлагаемое кадрирование — часть по центру с размером в 3/4\r\n      // от размера меньшей стороны.\r\n      this._resizeConstraint = new Square(\r\n          this._container.width / 2 - side / 2,\r\n          this._container.height / 2 - side / 2,\r\n          side);\r\n\r\n      // Отрисовка изначального состояния канваса.\r\n      this.setConstraint();\r\n    }.bind(this);\r\n\r\n    // Фиксирование контекста обработчиков.\r\n    this._onDragStart = this._onDragStart.bind(this);\r\n    this._onDragEnd = this._onDragEnd.bind(this);\r\n    this._onDrag = this._onDrag.bind(this);\r\n  };\r\n\r\n  Resizer.prototype = {\r\n    /**\r\n     * Родительский элемент канваса.\r\n     * @type {Element}\r\n     * @private\r\n     */\r\n    _element: null,\r\n\r\n    /**\r\n     * Положение курсора в момент перетаскивания. От положения курсора\r\n     * рассчитывается смещение на которое нужно переместить изображение\r\n     * за каждую итерацию перетаскивания.\r\n     * @type {Coordinate}\r\n     * @private\r\n     */\r\n    _cursorPosition: null,\r\n\r\n    /**\r\n     * Объект, хранящий итоговое кадрирование: сторона квадрата и смещение\r\n     * от верхнего левого угла исходного изображения.\r\n     * @type {Square}\r\n     * @private\r\n     */\r\n    _resizeConstraint: null,\r\n\r\n    /**\r\n     * Отрисовка канваса.\r\n     */\r\n    redraw: function() {\r\n      // Очистка изображения.\r\n      this._ctx.clearRect(0, 0, this._container.width, this._container.height);\r\n\r\n      // Параметры линии.\r\n      // NB! Такие параметры сохраняются на время всего процесса отрисовки\r\n      // canvas'a поэтому важно вовремя поменять их, если нужно начать отрисовку\r\n      // чего-либо с другой обводкой.\r\n\r\n      // Толщина линии.\r\n      this._ctx.lineWidth = 6;\r\n      // Цвет обводки.\r\n      this._ctx.strokeStyle = 'rgba(0,0,0,0)';\r\n      // Размер штрихов. Первый элемент массива задает длину штриха, второй\r\n      // расстояние между соседними штрихами.\r\n      this._ctx.setLineDash([15, 10]);\r\n      // Смещение первого штриха от начала линии.\r\n      this._ctx.lineDashOffset = 7;\r\n\r\n      // Сохранение состояния канваса.\r\n      this._ctx.save();\r\n\r\n      // Установка начальной точки системы координат в центр холста.\r\n      this._ctx.translate(this._container.width / 2, this._container.height / 2);\r\n\r\n      var displX = -(this._resizeConstraint.x + this._resizeConstraint.side / 2);\r\n      var displY = -(this._resizeConstraint.y + this._resizeConstraint.side / 2);\r\n      // Отрисовка изображения на холсте. Параметры задают изображение, которое\r\n      // нужно отрисовать и координаты его верхнего левого угла.\r\n      // Координаты задаются от центра холста.\r\n      this._ctx.drawImage(this._image, displX, displY);\r\n\r\n      // Отрисовка прямоугольника, обозначающего область изображения после\r\n      // кадрирования. Координаты задаются от центра.\r\n      this._ctx.strokeRect(\r\n          (-this._resizeConstraint.side / 2) - this._ctx.lineWidth / 2,\r\n          (-this._resizeConstraint.side / 2) - this._ctx.lineWidth / 2,\r\n          this._resizeConstraint.side - this._ctx.lineWidth / 2,\r\n          this._resizeConstraint.side - this._ctx.lineWidth / 2);\r\n\r\n      //  == Отрисовка кастомных рамок из точек ==\r\n      for (var i = 0; i < this._resizeConstraint.side; i += 12) {\r\n        this._ctx.beginPath();\r\n        this._ctx.fillStyle = '#ffe753';\r\n        this._ctx.arc( (this._resizeConstraint.side) / 2 - this._ctx.lineWidth, -(this._resizeConstraint.side) / 2 + i, 3, 0, 2 * Math.PI );\r\n        this._ctx.arc( -(this._resizeConstraint.side) / 2 - this._ctx.lineWidth / 2, -(this._resizeConstraint.side) / 2 + i, 3, 0, 2 * Math.PI );\r\n        this._ctx.fill();\r\n        this._ctx.closePath();\r\n      }\r\n      for (i = 0; i < this._resizeConstraint.side; i += 12) {\r\n        this._ctx.beginPath();\r\n        this._ctx.fillStyle = '#ffe753';\r\n        this._ctx.arc( -(this._resizeConstraint.side) / 2 + i, (this._resizeConstraint.side) / 2 - this._ctx.lineWidth, 3, 0, 2 * Math.PI );\r\n        this._ctx.arc( -(this._resizeConstraint.side) / 2 + i, -(this._resizeConstraint.side) / 2 - this._ctx.lineWidth / 2, 3, 0, 2 * Math.PI );\r\n        this._ctx.fill();\r\n        this._ctx.closePath();\r\n      }\r\n\r\n      // == Отрисовка оверлея ==\r\n      this._ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\r\n      this._ctx.beginPath();\r\n      this._ctx.rect(-(this._container.width / 2), -(this._container.height / 2), this._container.width, this._container.height);\r\n      this._ctx.moveTo((-this._resizeConstraint.side / 2) - this._ctx.lineWidth, (-this._resizeConstraint.side / 2) - this._ctx.lineWidth);\r\n      this._ctx.lineTo((this._resizeConstraint.side / 2) - (this._ctx.lineWidth / 2), (-this._resizeConstraint.side / 2) - this._ctx.lineWidth);\r\n      this._ctx.lineTo((this._resizeConstraint.side / 2) - (this._ctx.lineWidth / 2), (this._resizeConstraint.side / 2) - (this._ctx.lineWidth / 2));\r\n      this._ctx.lineTo((-this._resizeConstraint.side / 2) - this._ctx.lineWidth, (this._resizeConstraint.side / 2) - (this._ctx.lineWidth / 2));\r\n      this._ctx.closePath();\r\n\r\n      //== Отрисовка размеров картинки ==\r\n      this._ctx.fill('evenodd');\r\n      this._ctx.fillStyle = '#FFF';\r\n      this._ctx.textAlign = 'center';\r\n      this._ctx.font = '15px Tahoma';\r\n      this._ctx.fillText(this._image.naturalWidth + ' x ' + this._image.naturalWidth, 0, (-this._resizeConstraint.side / 2) - (this._ctx.lineWidth * 2));\r\n\r\n\r\n      // Восстановление состояния канваса, которое было до вызова ctx.save\r\n      // и последующего изменения системы координат. Нужно для того, чтобы\r\n      // следующий кадр рисовался с привычной системой координат, где точка\r\n      // 0 0 находится в левом верхнем углу холста, в противном случае\r\n      // некорректно сработает даже очистка холста или нужно будет использовать\r\n      // сложные рассчеты для координат прямоугольника, который нужно очистить.\r\n      this._ctx.restore();\r\n    },\r\n\r\n    /**\r\n     * Включение режима перемещения. Запоминается текущее положение курсора,\r\n     * устанавливается флаг, разрешающий перемещение и добавляются обработчики,\r\n     * позволяющие перерисовывать изображение по мере перетаскивания.\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @private\r\n     */\r\n    _enterDragMode: function(x, y) {\r\n      this._cursorPosition = new Coordinate(x, y);\r\n      document.body.addEventListener('mousemove', this._onDrag);\r\n      document.body.addEventListener('mouseup', this._onDragEnd);\r\n    },\r\n\r\n    /**\r\n     * Выключение режима перемещения.\r\n     * @private\r\n     */\r\n    _exitDragMode: function() {\r\n      this._cursorPosition = null;\r\n      document.body.removeEventListener('mousemove', this._onDrag);\r\n      document.body.removeEventListener('mouseup', this._onDragEnd);\r\n    },\r\n\r\n    /**\r\n     * Перемещение изображения относительно кадра.\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @private\r\n     */\r\n    updatePosition: function(x, y) {\r\n      this.moveConstraint(\r\n          this._cursorPosition.x - x,\r\n          this._cursorPosition.y - y);\r\n      this._cursorPosition = new Coordinate(x, y);\r\n    },\r\n\r\n    /**\r\n     * @param {MouseEvent} evt\r\n     * @private\r\n     */\r\n    _onDragStart: function(evt) {\r\n      this._enterDragMode(evt.clientX, evt.clientY);\r\n    },\r\n\r\n    /**\r\n     * Обработчик окончания перетаскивания.\r\n     * @private\r\n     */\r\n    _onDragEnd: function() {\r\n      this._exitDragMode();\r\n    },\r\n\r\n    /**\r\n     * Обработчик события перетаскивания.\r\n     * @param {MouseEvent} evt\r\n     * @private\r\n     */\r\n    _onDrag: function(evt) {\r\n      this.updatePosition(evt.clientX, evt.clientY);\r\n    },\r\n\r\n    /**\r\n     * Добавление элемента в DOM.\r\n     * @param {Element} element\r\n     */\r\n    setElement: function(element) {\r\n      if (this._element === element) {\r\n        return;\r\n      }\r\n\r\n      this._element = element;\r\n      this._element.insertBefore(this._container, this._element.firstChild);\r\n      // Обработчики начала и конца перетаскивания.\r\n      this._container.addEventListener('mousedown', this._onDragStart);\r\n    },\r\n\r\n    /**\r\n     * Возвращает кадрирование элемента.\r\n     * @return {Square}\r\n     */\r\n    getConstraint: function() {\r\n      return this._resizeConstraint;\r\n    },\r\n\r\n    /**\r\n     * Смещает кадрирование на значение указанное в параметрах.\r\n     * @param {number} deltaX\r\n     * @param {number} deltaY\r\n     * @param {number} deltaSide\r\n     */\r\n    moveConstraint: function(deltaX, deltaY, deltaSide) {\r\n      this.setConstraint(\r\n          this._resizeConstraint.x + (deltaX || 0),\r\n          this._resizeConstraint.y + (deltaY || 0),\r\n          this._resizeConstraint.side + (deltaSide || 0));\r\n    },\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} side\r\n     */\r\n    setConstraint: function(x, y, side) {\r\n      if (typeof x !== 'undefined') {\r\n        this._resizeConstraint.x = x;\r\n      }\r\n\r\n      if (typeof y !== 'undefined') {\r\n        this._resizeConstraint.y = y;\r\n      }\r\n\r\n      if (typeof side !== 'undefined') {\r\n        this._resizeConstraint.side = side;\r\n      }\r\n\r\n      requestAnimationFrame(function() {\r\n        this.redraw();\r\n        window.dispatchEvent(new CustomEvent('resizerchange'));\r\n      }.bind(this));\r\n    },\r\n\r\n    /**\r\n     * Удаление. Убирает контейнер из родительского элемента, убирает\r\n     * все обработчики событий и убирает ссылки.\r\n     */\r\n    remove: function() {\r\n      this._element.removeChild(this._container);\r\n\r\n      this._container.removeEventListener('mousedown', this._onDragStart);\r\n      this._container = null;\r\n    },\r\n\r\n    /**\r\n     * Экспорт обрезанного изображения как HTMLImageElement и исходником\r\n     * картинки в src в формате dataURL.\r\n     * @return {Image}\r\n     */\r\n    exportImage: function() {\r\n      // Создаем Image, с размерами, указанными при кадрировании.\r\n      var imageToExport = new Image();\r\n\r\n      // Создается новый canvas, по размерам совпадающий с кадрированным\r\n      // изображением, в него добавляется изображение взятое из канваса\r\n      // с измененными координатами и сохраняется в dataURL, с помощью метода\r\n      // toDataURL. Полученный исходный код, записывается в src у ранее\r\n      // созданного изображения.\r\n      var temporaryCanvas = document.createElement('canvas');\r\n      var temporaryCtx = temporaryCanvas.getContext('2d');\r\n      temporaryCanvas.width = this._resizeConstraint.side;\r\n      temporaryCanvas.height = this._resizeConstraint.side;\r\n      temporaryCtx.drawImage(this._image,\r\n          -this._resizeConstraint.x,\r\n          -this._resizeConstraint.y);\r\n      imageToExport.src = temporaryCanvas.toDataURL('image/png');\r\n\r\n      return imageToExport;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Вспомогательный тип, описывающий квадрат.\r\n   * @constructor\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} side\r\n   * @private\r\n   */\r\n  var Square = function(x, y, side) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.side = side;\r\n  };\r\n\r\n  /**\r\n   * Вспомогательный тип, описывающий координату.\r\n   * @constructor\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @private\r\n   */\r\n  var Coordinate = function(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  };\r\n\r\n  window.Resizer = Resizer;\r\n})();\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/resizer.js\n ** module id = 1\n ** module chunks = 0\n **/","/* global Resizer: true */\n\n/**\n * @fileoverview\n * @author Igor Alexeenko (o0)\n */\n\n'use strict';\n\n(function() {\n  /** @enum {string} */\n  var FileType = {\n    'GIF': '',\n    'JPEG': '',\n    'PNG': '',\n    'SVG+XML': ''\n  };\n\n  /** @enum {number} */\n  var Action = {\n    ERROR: 0,\n    UPLOADING: 1,\n    CUSTOM: 2\n  };\n\n  /**\n   * Регулярное выражение, проверяющее тип загружаемого файла. Составляется\n   * из ключей FileType.\n   * @type {RegExp}\n   */\n  var fileRegExp = new RegExp('^image/(' + Object.keys(FileType).join('|').replace('\\+', '\\\\+') + ')$', 'i');\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  var filterMap;\n\n  /**\n   * Объект, который занимается кадрированием изображения.\n   * @type {Resizer}\n   */\n  var currentResizer;\n\n  //==считывание вводимых данных в форму\n  var x = document.querySelector('#resize-x');\n  var y = document.querySelector('#resize-y');\n  var size = document.querySelector('#resize-size');\n  var fwd = document.querySelector('#resize-fwd');\n  fwd.disabled = true;\n  x.min = 0;\n  y.min = 0;\n  size.min = 0;\n\n  /**\n   * Удаляет текущий объект {@link Resizer}, чтобы создать новый с другим\n   * изображением.\n   */\n  function cleanupResizer() {\n    if (currentResizer) {\n      currentResizer.remove();\n      currentResizer = null;\n    }\n  }\n\n  /**\n   * Ставит одну из трех случайных картинок на фон формы загрузки.\n   */\n  function updateBackground() {\n    var images = [\n      'img/logo-background-1.jpg',\n      'img/logo-background-2.jpg',\n      'img/logo-background-3.jpg'\n    ];\n\n    var backgroundElement = document.querySelector('.upload');\n    var randomImageNumber = Math.round(Math.random() * (images.length - 1));\n    backgroundElement.style.backgroundImage = 'url(' + images[randomImageNumber] + ')';\n  }\n\n  /**\n   * Проверяет, валидны ли данные, в форме кадрирования.\n   * @return {boolean}\n   */\n  function resizeFormIsValid() {\n    if ((+x.value + +size.value > +currentResizer._image.naturalWidth) || (+y.value + +size.value > +currentResizer._image.naturalHeight) || (x.value < 0) || (y.value < 0) || !(x.value) || !(y.value) || !(size.value)) {\n      fwd.disabled = true;\n      return false;\n    } else {\n      fwd.disabled = false;\n      return true;\n    }\n  }\n\n  /**\n   * Форма загрузки изображения.\n   * @type {HTMLFormElement}\n   */\n  var uploadForm = document.forms['upload-select-image'];\n\n  /**\n   * Форма кадрирования изображения.\n   * @type {HTMLFormElement}\n   */\n  var resizeForm = document.forms['upload-resize'];\n\n  resizeForm.oninput = function() {\n    resizeFormIsValid();\n  };\n\n  /**\n   * Форма добавления фильтра.\n   * @type {HTMLFormElement}\n   */\n  var filterForm = document.forms['upload-filter'];\n  /**\n   * @type {HTMLImageElement}\n   */\n  var filterImage = filterForm.querySelector('.filter-image-preview');\n\n  /**\n   * @type {HTMLElement}\n   */\n  var uploadMessage = document.querySelector('.upload-message');\n\n  /**\n   * @param {Action} action\n   * @param {string=} message\n   * @return {Element}\n   */\n  function showMessage(action, message) {\n    var isError = false;\n\n    switch (action) {\n      case Action.UPLOADING:\n        message = message || 'Кексограмим&hellip;';\n        break;\n\n      case Action.ERROR:\n        isError = true;\n        message = message || 'Неподдерживаемый формат файла<br> <a href=\"' + document.location + '\">Попробовать еще раз</a>.';\n        break;\n    }\n\n    uploadMessage.querySelector('.upload-message-container').innerHTML = message;\n    uploadMessage.classList.remove('invisible');\n    uploadMessage.classList.toggle('upload-message-error', isError);\n    return uploadMessage;\n  }\n\n  function hideMessage() {\n    uploadMessage.classList.add('invisible');\n  }\n\n  /**\n   * Обработчик изменения изображения в форме загрузки. Если загруженный\n   * файл является изображением, считывается исходник картинки, создается\n   * Resizer с загруженной картинкой, добавляется в форму кадрирования\n   * и показывается форма кадрирования.\n   * @param {Event} evt\n   */\n  uploadForm.onchange = function(evt) {\n    var element = evt.target;\n    if (element.id === 'upload-file') {\n      // Проверка типа загружаемого файла, тип должен быть изображением\n      // одного из форматов: JPEG, PNG, GIF или SVG.\n      if (fileRegExp.test(element.files[0].type)) {\n        var fileReader = new FileReader();\n\n        showMessage(Action.UPLOADING);\n\n        fileReader.onload = function() {\n          cleanupResizer();\n\n          currentResizer = new Resizer(fileReader.result);\n          currentResizer.setElement(resizeForm);\n          uploadMessage.classList.add('invisible');\n\n          uploadForm.classList.add('invisible');\n          resizeForm.classList.remove('invisible');\n\n          hideMessage();\n        };\n\n        fileReader.readAsDataURL(element.files[0]);\n      } else {\n        // Показ сообщения об ошибке, если формат загружаемого файла не поддерживается\n        showMessage(Action.ERROR);\n      }\n    }\n  };\n  //==Задание 3.3 Cookies\n  (function() {\n    var browserCookies = require('browser-cookies');\n    var submitButton = document.querySelector('#filter-fwd');\n    var elems = filterForm['upload-filter'];\n    var defaultFilter = document.getElementById('upload-filter-none').value;\n\n    //== Вычисления по дню рождению Грейс Хоппер==\n    var today = new Date();\n    var birthdayGrace = new Date(today.getFullYear(), 11, 9);\n    //==Считаем количество дней жизни cookie==\n\n    if (today >= birthdayGrace) {\n      birthdayGrace = new Date(today.getFullYear(), 11, 9);\n    } else {\n      birthdayGrace = new Date(today.getFullYear() - 1, 11, 9);\n    }\n\n    var diffDays = (today - birthdayGrace) / 1000 / 60 / 60 / 24;\n\n    // Сохраняем в cookies последний выбранный фильтр\n    elems.value = browserCookies.get('upload-filter') || defaultFilter;\n    submitButton.onclick = function() {\n      browserCookies.set('upload-filter', elems.value, {expires: diffDays});\n    };\n  })();\n  /**\n   * Обработка сброса формы кадрирования. Возвращает в начальное состояние\n   * и обновляет фон.\n   * @param {Event} evt\n   */\n  resizeForm.onreset = function(evt) {\n    evt.preventDefault();\n\n    cleanupResizer();\n    updateBackground();\n\n    resizeForm.classList.add('invisible');\n    uploadForm.classList.remove('invisible');\n  };\n\n  /**\n   * Обработка отправки формы кадрирования. Если форма валидна, экспортирует\n   * кропнутое изображение в форму добавления фильтра и показывает ее.\n   * @param {Event} evt\n   */\n  resizeForm.onsubmit = function(evt) {\n    evt.preventDefault();\n\n    if (resizeFormIsValid()) {\n      var image = currentResizer.exportImage().src;\n\n      var thumbnails = filterForm.querySelectorAll('.upload-filter-preview');\n      for (var i = 0; i < thumbnails.length; i++) {\n        thumbnails[i].style.backgroundImage = 'url(' + image + ')';\n      }\n\n      filterImage.src = image;\n\n      resizeForm.classList.add('invisible');\n      filterForm.classList.remove('invisible');\n    }\n  };\n\n  /**\n   * Сброс формы фильтра. Показывает форму кадрирования.\n   * @param {Event} evt\n   */\n  filterForm.onreset = function(evt) {\n    evt.preventDefault();\n\n    filterForm.classList.add('invisible');\n    resizeForm.classList.remove('invisible');\n  };\n\n  /**\n   * Отправка формы фильтра. Возвращает в начальное состояние, предварительно\n   * записав сохраненный фильтр в cookie.\n   * @param {Event} evt\n   */\n  filterForm.onsubmit = function(evt) {\n    evt.preventDefault();\n\n    cleanupResizer();\n    updateBackground();\n\n    filterForm.classList.add('invisible');\n    uploadForm.classList.remove('invisible');\n  };\n\n  /**\n   * Обработчик изменения фильтра. Добавляет класс из filterMap соответствующий\n   * выбранному значению в форме.\n   */\n  filterForm.onchange = function() {\n    if (!filterMap) {\n      // Ленивая инициализация. Объект не создается до тех пор, пока\n      // не понадобится прочитать его в первый раз, а после этого запоминается\n      // навсегда.\n      filterMap = {\n        'none': 'filter-none',\n        'chrome': 'filter-chrome',\n        'sepia': 'filter-sepia',\n        'marvin': 'filter-marvin'\n      };\n    }\n\n    var selectedFilter = [].filter.call(filterForm['upload-filter'], function(item) {\n      return item.checked;\n    })[0].value;\n\n    // Класс перезаписывается, а не обновляется через classList потому что нужно\n    // убрать предыдущий примененный класс. Для этого нужно или запоминать его\n    // состояние или просто перезаписывать.\n    filterImage.className = 'filter-image-preview ' + filterMap[selectedFilter];\n  };\n\n  cleanupResizer();\n  updateBackground();\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/upload.js\n ** module id = 2\n ** module chunks = 0\n **/","exports.defaults = {};\n\nexports.set = function(name, value, options) {\n  // Retrieve options and defaults\n  var opts = options || {};\n  var defaults = exports.defaults;\n\n  // Apply default value for unspecified options\n  var expires  = opts.expires || defaults.expires;\n  var domain   = opts.domain  || defaults.domain;\n  var path     = opts.path     != undefined ? opts.path     : (defaults.path != undefined ? defaults.path : '/');\n  var secure   = opts.secure   != undefined ? opts.secure   : defaults.secure;\n  var httponly = opts.httponly != undefined ? opts.httponly : defaults.httponly;\n\n  // Determine cookie expiration date\n  // If succesful the result will be a valid Date, otherwise it will be an invalid Date or false(ish)\n  var expDate = expires ? new Date(\n      // in case expires is an integer, it should specify the number of days till the cookie expires\n      typeof expires == 'number' ? new Date().getTime() + (expires * 864e5) :\n      // else expires should be either a Date object or in a format recognized by Date.parse()\n      expires\n  ) : '';\n\n  // Set cookie\n  document.cookie = name.replace(/[^+#$&^`|]/g, encodeURIComponent)                // Encode cookie name\n  .replace('(', '%28')\n  .replace(')', '%29') +\n  '=' + value.replace(/[^+#$&/:<-\\[\\]-}]/g, encodeURIComponent) +                  // Encode cookie value (RFC6265)\n  (expDate && expDate.getTime() >= 0 ? ';expires=' + expDate.toUTCString() : '') + // Add expiration date\n  (domain   ? ';domain=' + domain : '') +                                          // Add domain\n  (path     ? ';path='   + path   : '') +                                          // Add path\n  (secure   ? ';secure'           : '') +                                          // Add secure option\n  (httponly ? ';httponly'         : '');                                           // Add httponly option\n};\n\nexports.get = function(name) {\n  var cookies = document.cookie.split(';');\n\n  // Iterate all cookies\n  for(var i = 0; i < cookies.length; i++) {\n    var cookie = cookies[i];\n    var cookieLength = cookie.length;\n\n    // Determine separator index (\"name=value\")\n    var separatorIndex = cookie.indexOf('=');\n\n    // IE<11 emits the equal sign when the cookie value is empty\n    separatorIndex = separatorIndex < 0 ? cookieLength : separatorIndex;\n\n    // Decode the cookie name and remove any leading/trailing spaces, then compare to the requested cookie name\n    if (decodeURIComponent(cookie.substring(0, separatorIndex).replace(/^\\s+|\\s+$/g, '')) == name) {\n      return decodeURIComponent(cookie.substring(separatorIndex + 1, cookieLength));\n    }\n  }\n\n  return null;\n};\n\nexports.erase = function(name, options) {\n  exports.set(name, '', {\n    expires:  -1,\n    domain:   options && options.domain,\n    path:     options && options.path,\n    secure:   0,\n    httponly: 0}\n  );\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/browser-cookies/src/browser-cookies.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nvar loadJSONPData = require('./load');\nvar generatePicture = require('./review');\nvar filtersForm = document.querySelector('.filters');\n\nloadJSONPData('http://localhost:1506/api/pictures?callback=', function(data) {\n  data.forEach(function(picture) {\n    generatePicture(picture);\n  });\n  if(filtersForm.classList.contains('hidden')) {\n    filtersForm.classList.remove('hidden');\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pictures.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function(url, callback) {\n  var scriptEl = document.createElement('script');\n  scriptEl.src = url + 'JSONPCallback';\n  document.body.appendChild(scriptEl);\n\n  window.JSONPCallback = function(data) {\n    callback(data);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/load.js\n ** module id = 5\n ** module chunks = 0\n **/","'use strict';\n\nvar IMAGE_LOAD_TIMEOUT = 3000;\nvar templateElement = document.querySelector('template');\nvar container = document.querySelector('.container');\n\nmodule.exports = function(picture) {\n\n  var elementToClone;\n  var backgroundLoadTimeout;\n\n  if('content' in templateElement) {\n    elementToClone = templateElement.content.querySelector('.picture');\n  } else {\n    elementToClone = templateElement.querySelector('.picture');\n  }\n\n  var element = elementToClone.cloneNode(true);\n  var img = element.querySelector('img');\n\n  backgroundLoadTimeout = setTimeout(function() {\n    img.src = '';\n    element.classList.add('picture-load-failure');\n  }, IMAGE_LOAD_TIMEOUT);\n\n  img.onload = function() {\n    clearTimeout(backgroundLoadTimeout);\n  };\n\n  img.onerror = function() {\n    element.classList.add('picture-load-failure');\n  };\n\n  img.src = picture.url;\n  container.appendChild(element);\n\n  return element;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/review.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}